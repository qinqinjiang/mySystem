<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/context 
http://www.springframework.org/schema/context/spring-context-3.0.xsd
http://www.springframework.org/schema/aop
http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
http://www.springframework.org/schema/data/jpa
http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">

	<!-- 开启自动扫描 -->
	<context:component-scan base-package="com.wode" />
	
	<!-- 开启aop支持 -->
	<aop:aspectj-autoproxy /> 
	
	<!-- 配置实体类管理工厂 -->
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="packagesToScan" value="com.wode.entity"/>
		<property name="persistenceProvider">
			<bean class="org.hibernate.ejb.HibernatePersistence"/>
		</property>
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="generateDdl" value="true"/>
				<property name="database" value="MYSQL"/>
				<property name="databasePlatform" value="org.hibernate.dialect.MySQL5InnoDBDialect"/>
				<property name="showSql" value="true"/>
			</bean>
		</property>
		<property name="jpaDialect">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect"/>
		</property>
		<property name="jpaPropertyMap">
			<map>
				<entry key="hibernate.query.substitutions" value="true 1, false 0"/>
				<entry key="hibernate.default_batch_fetch_size" value="16"/>
				<entry key="hibernate.max_fetch_depth" value="2"/>
				<entry key="hibernate.generate_statistics" value="true"/>
				<entry key="hibernate.bytecode.use_reflection_optimizer" value="true"/>
				<entry key="hibernate.cache.use_second_level_cache" value="false"/>
				<entry key="hibernate.cache.use_query_cache" value="false"/>
			</map>
		</property>
	</bean>
		
	<!--配置事务管理器-->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory"/>
	</bean>
	
	<!-- 开启注解事务-->
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<!-- 配置Spring Data -->
	<jpa:repositories base-package="com.wode.dao"
		repository-impl-postfix="Impl"
		entity-manager-factory-ref="entityManagerFactory"
		transaction-manager-ref="transactionManager">
	</jpa:repositories>

	<!-- 配置数据源（使用C3P0数据源实现） -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close"><!-- destroy-method="close"的作用是当数据库连接不使用的时候，就把该连接重新放到数据池中，方便下次使用调用 -->
		<!-- 指定连接数据库的驱动 -->
		<property name="driverClass" value="com.mysql.jdbc.Driver" />
		<!-- 指定连接数据库的URL -->
		<property name="jdbcUrl" value="jdbc:mysql://localhost:3306/db_user?characterEncoding=utf8" />
		<!-- 指定连接数据库的用户名 -->
		<property name="user" value="root" />
		<!-- 指定连接数据库的密码 -->
		<property name="password" value="123" />
		
		<!-- 配置c3p0数据源 -->
		<!-- 连接池中的最大连接数 -->
		<property name="maxPoolSize" value="20" />
		<!-- 连接池中的最小连接数 -->
		<property name="minPoolSize" value="1" />
		<!-- 初始化连接池中的 连接数(取值 为minPoolSize和 maxPoolSize之间，默认值为3) -->
		<property name="initialPoolSize" value="3" />
		<!-- 指定连接池里连接的超时时长（超过时长连接对象应该被销毁） -->
		<property name="maxIdleTime" value="5000" />
		<!-- 当连接池中的连接耗尽的时候c3p0一次同时获取的连接数(默认为3) -->
		<property name="acquireIncrement" value="2" />
		<!-- 指定连接池检测线程间隔多长时间校验一次池内的所有链接对象是否超时 -->
		<property name="idleConnectionTestPeriod" value="3000" />
	</bean>
</beans>
	